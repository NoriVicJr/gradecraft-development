- content_for :context_menu do
  .context_menu
    %ul
      %li= link_to decorative_glyph(:plus) + "New #{(term_for :assignment).titleize}", new_assignment_path, class: "button button-edit"

.pageContent
  = render partial: "layouts/alerts"

  .total-points-label
    %h2 Total
    %h2= "#{points(total_available_points)} points"
  .total-points-graph
    - current_course.grade_scheme_elements.each_with_index do |grade_scheme_element, index|
      .total-points-graph-fill-bar{:style => "width: #{percent_of_total_points(index)}%"}
        %span.grade-marker{tabindex: "0", "aria-describedby": "tip-grade-level-top"}
          = level_letter_grade(index)
          .display-on-hover.tooltip-with-caret.hover-style{role: "tooltip", :id=> "tip-grade-level-top"}
            = points(level_point_threshold(index))

  .assignment-index-container
    - @assignment_types.each do |assignment_type|
      .assignment-type-bar.assignment-settings
        %h2.assignment-type-name= "#{assignment_type.try(:name)}"
        .points-ratio #{ points(assignment_type.total_points) }/#{ points(total_available_points) }
        .points-bar-graph.assignment-settings
          - if assignment_type.total_points > total_available_points
            .points-bar-graph-fill.assignment-settings{:style => "width: 100%; background-color: #D1495B"}
            %span.hint Total for this assignment type exceeds threshold for highest level
          - else
            .points-bar-graph-fill.assignment-settings{:style => "width: #{(assignment_type.total_points).to_f / (total_available_points).to_f * 100}%"}
          - current_course.grade_scheme_elements.each_with_index do |grade_scheme_element, index|
            .grade-level-marker{:style => "width: #{percent_of_total_points(index)}%"}
        = link_to "Review Settings", "#", class: "button right"
