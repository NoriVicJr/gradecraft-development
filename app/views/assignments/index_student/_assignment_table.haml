- presenter.assignments_for(assignment_type).each do |assignment|
  - if presenter.assignment_visible?(assignment)
    .assignment-container{class: ("predicted" if assignment.is_predicted_by_student?(current_student) && !GradeProctor.new(presenter.grade_for(assignment)).viewable? )}
      .assignment-info.assignment-indicator-icon
        - if GradeProctor.new(presenter.grade_for(assignment)).viewable?
          %span.checkmark= glyph(:check)
        - elsif assignment.is_predicted_by_student?(current_student)
          %span.flag= glyph(:flag)
        - if assignment.required? && !assignment.is_predicted_by_student?(current_student) && !GradeProctor.new(presenter.grade_for(assignment)).viewable?
          %span.asterisk{tabindex: "0", "aria-describedby": "required-assignment-tip_#{assignment.id}"}
            = glyph(:asterisk)
            .display-on-hover.hover-style{role: "tooltip", :id=> "required-assignment-tip_#{assignment.id}"}
              %p This #{term_for :assignment} is required!

      .assignment-name
        - if presenter.name_visible?(assignment)
          = link_to assignment.name, assignment_path(assignment)
          = render partial: "assignments/index_student/components/assignment_icons", locals: { presenter: presenter, assignment: assignment }
        - else
          %span.italic= "The name for this #{term_for :assignment} has been hidden until you unlock it"
      .assignment-info.assignment-due-date
        = render partial: "assignments/index_student/components/due_at", locals: { assignment: assignment }

      - if presenter.points_visible?(assignment)
        - if assignment.pass_fail?
          .assignment-info.assignment-pass-fail
            = render partial: "grades/components/pass_fail", locals: { presenter: presenter, assignment: assignment }
        - else
          // Checking to see if this assignment type is student weightable
          .assignment-info.assignment-points
            = render partial: "grades/components/score", locals: { grade: presenter.grade_for(assignment), assignment_type: assignment_type, assignment: assignment }
