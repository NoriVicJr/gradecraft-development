= render partial: "students/table_filter"

%table.student-index-table.dynatable.no-table-header
  %thead
    %tr
      %th Flag
      %th Rank
      %th Avatar
      %th First Name
      %th Last Name
      %th= "Screenname" if presenter.display_pseudonyms?
      - if presenter.has_teams?
        %th= "#{presenter.course.team_term}" 
        %th= "Role" if presenter.has_team_roles?
      %th{scope: "col"} Score
      %th Level
      - if presenter.has_badges?
        %th #{ term_for :badges }
        %th{:style => "display: none"} Badge Count
      %th Last Login
      %th Options
  %tbody
    - index = 0
    - presenter.students.each_with_index do |student|
      %tr
        %td
          = div_for student do
            = link_to flagged_user_icon(presenter.course, current_user, student.id), flag_user_path(student), method: :post, remote: true, class: "flagged-user-icon"
          %span{ class: ('graded' if !student.auditing?) }
        %td= index += 1 if !student.auditing?
        %td
          - if student.avatar_file_name.present?
            %img.img-rounded{ :src => student.avatar_file_name, :width => 30 }
        %td= link_to student.first_name, student_path(student)
        %td= link_to student.last_name, student_path(student)
        %td= student.display_name if presenter.display_pseudonyms?
        - if presenter.has_teams? 
          %td
            = link_to student.team.name, team_path(id: student.team.id) if student.team
          %td= student.try(:team_role) if presenter.has_team_roles?
        %td= points student.score
        %td= student.grade_scheme.try(:name)
        - if presenter.has_badges?
          %td#earned_badges{"data-title" => "Badges"}
            - student.earned_badges.each do |badge|
              %img{:src => badge.icon, :alt => badge.name, :width => "20", :title => badge.name}
          %td{ :style => "display: none" }= student.earned_badges_for_course(presenter.course).count
        %td= student.last_login
        %td
          .right
            %a.button.button-edit.button-options= glyph(:cog) + glyph("caret-down")
            %ul.options-menu
              %li= link_to glyph(:eye) + "Preview as this student", student_preview_path(student)
              %li= mail_to student.email, glyph(:envelope) + "Email"
              %li= link_to glyph(:edit) + "Edit", edit_user_path(student)
              %li= link_to glyph(:trash) + "Delete", student.course_memberships.where(course_id: presenter.course.id).first, data: { confirm: "This will delete #{student.name} from your course - are you sure?" }, :method => :delete
