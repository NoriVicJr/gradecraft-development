- presenter.students.each do |student|
  - student_submission = student.submission_for_assignment(presenter.assignment)
  - grade = presenter.grade_for_student(student)
  %tr
    - if presenter.assignment.is_unlockable?
      %td
        - if presenter.assignment.is_unlocked_for_student?(student)
          %i.fa.fa-unlock-alt
        - else
          %i.fa.fa-lock
    %td= link_to student.first_name, student_path(student)
    %td= link_to student.last_name, student_path(student)
    - if presenter.assignment.threshold_points?
      %td.raw-score
        = points grade.raw_points if grade.instructor_modified?
    %td.status-or-score
      - if presenter.assignment.pass_fail?
        = "#{ term_for grade.pass_fail_status }" if grade.instructor_modified? && grade.pass_fail_status.present?
      - else
        = points grade.final_points if grade.instructor_modified?

    // If the student can weight the assignment type
    - if presenter.assignment_type.student_weightable?
      %td
        - if student.weighted_assignments?(current_course)
          = points grade.score if grade.instructor_modified?
        - else
          = "(not yet assigned)"

    - if presenter.assignment.has_levels?
      %td= presenter.assignment.grade_level(grade) if grade
    %td
      %span
      - if grade.feedback_read?
        = tooltip("feedback-read-tip_#{presenter.assignment.id}", :check) do
          This feedback has been marked as read by the #{term_for :student}

      - elsif grade.feedback_reviewed?
        = tooltip("feedback-viewed-tip_#{presenter.assignment.id}", :eye) do
          This feedback has been viewed by the #{term_for :student}

    %td= grade.status

    - if presenter.assignment.accepts_submissions?
      %td
        - unless student_submission.nil?
          = presenter.submission_submitted_date_for(student_submission)
      %td{:style => "display: none"}
        = presenter.submission_submitted_date_for(student_submission).to_formatted_s(:db) if presenter.submission_submitted_date_for(student_submission).present?

    %td
      .right
        %ul.button-bar
          - if presenter.assignment.accepts_submissions?
            - if presenter.has_viewable_submission?(student, current_user)
              /* Submission present - allow instructor to see it, and identify if it's a new submission or a resubmission. Icon represents if there are files attached. */
              %li= link_to decorative_glyph(:paperclip) + "See Submission", assignment_submission_path(presenter.assignment, student_submission.id), class: "button"

          - if grade.instructor_modified?
            %li= link_to decorative_glyph(:eye) + "See Grade", grade_path(grade), class: "button"
            - if presenter.assignment.accepts_submissions? && presenter.submission_resubmitted?(student_submission)
              = active_course_link_to decorative_glyph(:edit) + "Re-grade", edit_grade_path(grade), class: "button danger"
            - else
              = active_course_link_to decorative_glyph(:edit) + "Edit Grade", edit_grade_path(grade), class: "button"
            = active_course_link_to decorative_glyph(:trash) + "Delete Grade", grade_path(grade), class: "button", data: { confirm: "Are you sure?", method: :delete }
          - else
            - if presenter.assignment.is_unlockable? && !presenter.assignment.is_unlocked_for_student?(student)
              = active_course_link_to decorative_glyph("unlock-alt") + "Unlock", manually_unlock_unlock_state_path(student_id: student.id, assignment_id: presenter.assignment.id), :method => :post, class: "button"
            - team_param = presenter.for_team? ? {team_id: presenter.team.id} : nil
            = active_course_link_to decorative_glyph(:check) + "Grade", assignment_student_grade_path(presenter.assignment, student, team_param), method: :post, class: "button #{presenter.has_viewable_submission?(student, current_user) ? "danger" : ""}"

    - if presenter.assignment.release_necessary?
      %td
        .center
          - if grade.is_graded?
            %label
              %span.sr-only Select Assignment to Update Grade Status
              = check_box_tag "grade_ids[]", grade.id, false, data: { behavior: "toggle-disable-list-command", commands: "[data-behavior='selected-individual-grades-command']" }, id: "grade_id_#{grade.id}"
