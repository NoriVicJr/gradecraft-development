= render partial: "layouts/alerts", locals: { model: @badge, term: term_for(:badge) }

= simple_form_for @badge do |f|
  %section.form-section

    %h2.form-title Basic Info
    .form-item
      = f.input :name

    .form-item
      = f.input :full_points, data: {autonumeric: true, "m-dec" => "0"}, label: "Points Awarded"

    .form-item
      = f.label :file_field, "Icon"
      = f.file_field :icon, {class: "media-image-upload"}
      .form-hint Badges appear in different sizes in GradeCraft. Recommended size is 150px x 150px or larger.
      .preview-wrapper{ class: @badge.persisted? ? "" : "hidden"}
        .icon-preview.large-preview
          .img-cropper.large-crop
            %img{:src => @badge.icon}
          %span.xaxis-label 150px
          %span.yaxis-label 150px
        .icon-preview.medium-preview
          .img-cropper.med-crop
            %img{:src => @badge.icon}
          %span.xaxis-label 80px
          %span.yaxis-label 80px
        .icon-preview.small-preview
          .img-cropper.small-crop
            %img{:src => @badge.icon}
          %span.xaxis-label 40px
          %span.yaxis-label 40px

    .form-item
      %label{for: "form-badge-description"} Description
      .textarea#form-badge-description
        .form-hint Describe what this #{term_for :badge} means, and how it can be earned. Note that if this #{term_for :badge} is marked as visible then this description will also be viewable in the list of #{term_for :badges}.
        = f.text_area :description, class: "froala"

    .form-item
      = f.label :badge_files, "Attachments"
      = f.simple_fields_for :badge_files, @badge.badge_files.new do |bf|
        = bf.file_field :file, :multiple => true, :label => false, :id => "badge_badge_files"
      - if @badge.badge_files.exists?
        %h5.bold Uploaded files
        %ul.uploaded-files
          - @badge.badge_files.each do |bf|
            - next if bf.new_record?
            %li
              = link_to bf.filename, bf.url, :target => "_blank"
              = link_to "(Remove)", remove_uploads_path({ :model => "BadgeFile", badge_id: @badge.id, :upload_id => bf.id } )

  %section.form-section
    %h2.form-title Settings
    .form-item.no-margin
      = f.check_box :visible
      = f.label :visible
      = tooltip("badges-visible-hint", "info-circle", placement: "right") do
        Can #{term_for :students} see this #{term_for :badge}?

    .form-item.no-margin
      = f.check_box :can_earn_multiple_times
      = f.label :can_earn_multiple_times,"Multi-award"
      = tooltip("badges-multiple-earn-hint", "info-circle", placement: "right") do
        Can this #{term_for :badge} be given to one #{term_for :student} multiple times through the semester?

    .form-item.no-margin
      = f.check_box :student_awardable
      = f.label :student_awardable,"Student-awardable"
      = tooltip("student-awardable-hint", "info-circle", placement: "right") do
        Can this #{term_for :badge} be given by one #{term_for :student} to another #{term_for :student}?


  %section.form-section
    %h2.form-title Unlocks
    %p.hint Unlocks allow you to direct the sequence of content in your course. What do students need to do in order to unlock this #{ term_for :badge }?
    .unlock-conditions
      %script(id="unlock-condition-template" type="text/x-template")
        %fieldset.unlock-condition
          = f.simple_fields_for :unlock_conditions, UnlockCondition.new, class: "form-inline", child_index: "child_index" do |ucf|
            = render partial: "layouts/unlock_condition_fields", locals: { f: ucf }
      - @badge.unlock_conditions.each do |condition|
        %fieldset.unlock-condition
          = f.simple_fields_for :unlock_conditions, condition, class: "form-inline" do |ucf|
            = render partial: "layouts/unlock_condition_fields", locals: { f: ucf }
    .box.box-padded.add-unlock-condition-wrapper
      %button.button-link.add-unlock-condition=glyph(:plus) + "Add a Condition"

    .unlock-visibility-settings
      %h2.form-title Unlock Visibility Settings
      .form-item
        .locked-visibility-options.form-item-with-options
          = f.check_box :visible_when_locked, {class: "has-conditional-options"}
          = f.label :visible_when_locked, :label => "Visible when Locked"

        %ul.locked-display.visible_elements.conditional-options.indented{"class"=>("visually-hidden" if !f.object.visible_when_locked?)}
          %li.locked-display
            = f.check_box :show_name_when_locked
            = f.label :show_name_when_locked, :label => "Show Name when Locked"
          %li.locked-display
            = f.check_box :show_points_when_locked
            = f.label :show_points_when_locked, :label => "Show Points when Locked"
          %li.locked-display
            = f.check_box :show_description_when_locked
            = f.label :show_description_when_locked, :label => "Show Description when Locked"

  .submit-buttons
    %ul
      %li= submit_tag "#{@badge.persisted? ? 'Update' : 'Create'} #{term_for :badge}", class: "button"
      %li= link_to glyph("times-circle") + "Cancel", badges_path, class: "button"
