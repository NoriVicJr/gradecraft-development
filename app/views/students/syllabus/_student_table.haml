%thead
  %tr
    %th
    %th= "#{term_for :assignment}"
    %th{ "data-dynatable-sorts" => "pointsPossible" } Points
    %th{:style => "display: none"} Points Possible
    %th Due
    %th
    %th
%tbody
- assignments = assignment_type.assignments.includes(:assignment_type, :unlock_conditions)
- assignments.each do |assignment|
  - grade_visible_for_assignment = @student.grade_released_for_assignment?(assignment)
  - grade = @student.grade_for_assignment(assignment)
  - group = @student.group_for_assignment(assignment)
  - submission = @student.submission_for_assignment(assignment)
  - if assignment.visible_for_student?(@student) || grade_visible_for_assignment
    %tr
      %td= render "students/syllabus/assignment_icons", assignment: assignment
      %td
        - if assignment.name_visible_for_student?(@student)
          = link_to assignment.name, assignment_path(assignment)
      %td
        - if assignment.points_visible_for_student?(@student)
          - if assignment.pass_fail?
            - if grade_visible_for_assignment
              .bold
                - if grade.pass_fail_status
                  = term_for(grade.pass_fail_status)
            - else
              = "#{term_for :pass}/#{term_for :fail}"
          - else
            // Checking to see if this assignment type is student weightable
            - if assignment_type.student_weightable?
              // Checking to see if this student has weighted this assignment anything other than 1
              - if (@student.weight_for_assignment_type(assignment_type) == 0 && current_course.default_assignment_weight != 1) || @student.weight_for_assignment_type(assignment_type) > 1
                - if grade_visible_for_assignment
                  = "#{points grade.raw_score} / #{ points assignment.point_total } points (Raw)"
                  .bold= "#{ points grade.score } / #{points grade.point_total} points (Multiplied)"
                - else
                  .italic= "#{points grade.point_total} points possible"
              - else
                - if grade_visible_for_assignment
                  .bold= "#{points grade.raw_score} / #{ points grade.point_total } points"
                - else
                  .italic= "#{points assignment.point_total} points possible"
            - else
              - if grade_visible_for_assignment
                .bold
                  = "#{points grade.score} / #{points grade.point_total} points earned"
              - else
                .italic= "#{points assignment.point_total} points possible"
            .bold= "Your Goal: #{points grade.predicted_score}" if grade && grade.predicted_score > 0 && current_user_is_student?
      %td{:style => "display: none"}= assignment.point_total
      %td
        - if assignment.future?
          %span= "#{assignment.due_at.strftime("%A, %b %d, %l:%M%p")}"
      %td
        - if assignment.student_logged? && assignment.open?
          = render partial: "assignments/self_log_form", locals: { student: @student, assignment: assignment }
      %td
        .right
          %ul.button-bar

            / Results /
            - if grade_visible_for_assignment
              %li= link_to glyph(:eye) + "See Results", assignment_path(assignment, anchor: "tab4"), class: "button"

            / Groups /
            - if assignment.has_groups?
              - if group.present?
                %li= link_to glyph(:users) + "See #{term_for :group}", group_path(group), class: "button"
              - else
                %li= link_to glyph(:users) + "Create a #{term_for :group}", new_group_path, class: "button"

            / Submissions /
            - if assignment.accepts_submissions? && assignment.is_unlocked_for_student?(@student)
              - if assignment.is_individual?
                - if submission.present?
                  %li= link_to glyph("file-o") + "See Submission", assignment_path(assignment, anchor: "tab3"), class: "button"
                - elsif assignment.open?
                  %li= link_to glyph(:upload) + "Submit", new_assignment_submission_path(assignment, student_id: @student), class: "button"
              - elsif assignment.has_groups? && group
                - if group.submission_for_assignment(assignment)
                  %li= link_to glyph("file-o") + "See Submission", assignment_path(assignment, anchor: "tab3"), class: "button"
                - elsif group.approved? && assignment.open?
                  %li= link_to glyph(:upload) + "Submit", new_assignment_submission_path(assignment, group_id: group), class: "button"